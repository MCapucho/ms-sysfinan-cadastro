version: '3.3'
services:
  mysql:
    image: mysql:latest
    restart: always
    hostname: mysql
    environment:
      MYSQL_DATABASE: 'sysfinan'
      MYSQL_USER: 'sysfinan'
      MYSQL_PASSWORD: 'q1w2e3r4'
    ports:
      - '3307:3306'
    expose:
      - '3307'
    volumes:
      - my-db:/var/lib/mysql

  prometheus:
    image: prom/prometheus:v2.17.1
    user: root
    container_name: prometheus
    hostname: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - metrics

  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    hostname: grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - metrics

  sonarqube:
    image: sonarqube:latest
    hostname: sonarqube
    restart: always
    expose:
      - 9000
    ports:
      - '9000:9000'
    networks:
      - metrics
    environment:
      - sonar.jdbc.url=jdbc:mysql://127.0.0.1:3307/sonar
      - sonar.jdbc.username=sysfinan
      - sonar.jdbc.password=q1w2e3r4
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    depends_on:
      - mysql

  localstack:
    container_name: "localstack"
    image: localstack/localstack
    ports:
      - "127.0.0.1:4566:4566"            # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559"  # external services port range
    environment:
      - DEBUG=${DEBUG-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411

volumes:
  my-db:
  prometheus-data:
  grafana_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:

networks:
  metrics:
    driver: bridge